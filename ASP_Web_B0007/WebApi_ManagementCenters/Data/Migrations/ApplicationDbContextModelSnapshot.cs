// <auto-generated />
using System;
using Data.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Data.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("Khoa")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<int>("MaTrungTam")
                        .HasColumnType("int");

                    b.Property<string>("NgayCapNhat")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayTao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NgayXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NguoiXoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("RefreshToken")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("RefreshTokenExpiry")
                        .HasColumnType("datetime2");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Data.Models.ChiTietThuChi", b =>
                {
                    b.Property<int?>("MaChiTiet")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maChiTiet");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaChiTiet"));

                    b.Property<string>("DonVi")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("donVi");

                    b.Property<int?>("MaPhieu")
                        .HasColumnType("int")
                        .HasColumnName("maPhieu");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("SoLuong")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("soLuong");

                    b.Property<string>("TenChiTiet")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenChiTiet");

                    b.Property<string>("TongTien")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("tongTien");

                    b.HasKey("MaChiTiet")
                        .HasName("PK__chiTietT__9996488817FF50DE");

                    b.HasIndex("MaPhieu");

                    b.ToTable("chiTietThuChi", (string)null);
                });

            modelBuilder.Entity("Data.Models.DichVu", b =>
                {
                    b.Property<int?>("MaDichVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maDichVu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaDichVu"));

                    b.Property<string>("Gia")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("gia");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("Post")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("post");

                    b.Property<string>("TenDichVu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenDichVu");

                    b.Property<string>("ThongTin")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("thongTin");

                    b.HasKey("MaDichVu")
                        .HasName("PK__DichVu__80F48B09A0BEC9A7");

                    b.ToTable("DichVu", (string)null);
                });

            modelBuilder.Entity("Data.Models.HocSinh", b =>
                {
                    b.Property<int?>("MaHocSinh")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maHocSinh");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaHocSinh"));

                    b.Property<string>("Bmi")
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("BMI");

                    b.Property<string>("CanNang")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("canNang");

                    b.Property<string>("Cccdcha")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CCCDCha");

                    b.Property<string>("Cccdme")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CCCDMe");

                    b.Property<string>("ChieuCao")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("chieuCao");

                    b.Property<string>("ChucNangCoThe")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("chucNangCoThe");

                    b.Property<string>("DanhGiaSucKhoe")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("danhGiaSucKhoe");

                    b.Property<string>("DiaChi")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("diaChi");

                    b.Property<string>("EmailCha")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("emailCha");

                    b.Property<string>("EmailMe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("emailMe");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("gioiTinh");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hinhAnh");

                    b.Property<int?>("MaLop")
                        .HasColumnType("int")
                        .HasColumnName("maLop");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngaySinh");

                    b.Property<string>("NgaySinhCha")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngaySinhCha");

                    b.Property<string>("NgaySinhMe")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngaySinhMe");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NgheNghiepCha")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ngheNghiepCha");

                    b.Property<string>("NgheNghiepMe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ngheNghiepMe");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("SoDienThoaiCha")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("soDienThoaiCha");

                    b.Property<string>("SoDienThoaiMe")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("soDienThoaiMe");

                    b.Property<string>("TenCha")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenCha");

                    b.Property<string>("TenHocSinh")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenHocSinh");

                    b.Property<string>("TenMe")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenMe");

                    b.Property<string>("ThongTin")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("thongTin");

                    b.Property<string>("TinhTrangMat")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tinhTrangMat");

                    b.Property<string>("TinhTrangRang")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tinhTrangRang");

                    b.Property<string>("TinhTrangTamLy")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)")
                        .HasColumnName("tinhTrangTamLy");

                    b.HasKey("MaHocSinh")
                        .HasName("PK__HocSinh__B9EB19743168849F");

                    b.HasIndex("MaLop");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("HocSinh", (string)null);
                });

            modelBuilder.Entity("Data.Models.KetQua", b =>
                {
                    b.Property<int?>("MaKetQua")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maKetQua");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaKetQua"));

                    b.Property<string>("Diem")
                        .IsRequired()
                        .HasMaxLength(5)
                        .HasColumnType("nvarchar(5)")
                        .HasColumnName("diem");

                    b.Property<int?>("MaHocSinh")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maHocSinh");

                    b.Property<int?>("MaMonHoc")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maMonHoc");

                    b.Property<int?>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maNhanVien");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<string>("NgayKiemTra")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayKiemTra");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("TenKetQua")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenKetQua");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trangThai");

                    b.Property<string>("XepLoai")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("xepLoai");

                    b.HasKey("MaKetQua")
                        .HasName("PK__KetQua__A2FDF9D61CD040EC");

                    b.HasIndex("MaHocSinh");

                    b.HasIndex("MaMonHoc");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("KetQua", (string)null);
                });

            modelBuilder.Entity("Data.Models.LoSanPham", b =>
                {
                    b.Property<int?>("MaLoSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maLoSanPham");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaLoSanPham"));

                    b.Property<string>("DonVi")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("donVi");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("ghiChu");

                    b.Property<int?>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maNhanVien");

                    b.Property<int?>("MaSanPham")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maSanPham");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<string>("NgayHetHan")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayHetHan");

                    b.Property<string>("NgayNhap")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayNhap");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("SoLuong")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("soLuong");

                    b.Property<string>("TenLoSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenLoSanPham");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaLoSanPham")
                        .HasName("PK__LoSanPha__17801A8BD327A917");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("MaSanPham");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("LoSanPham", (string)null);
                });

            modelBuilder.Entity("Data.Models.Lop", b =>
                {
                    b.Property<int?>("MaLop")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maLop");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaLop"));

                    b.Property<string>("HocPhi")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("hocPhi");

                    b.Property<string>("LichHoc")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("lichHoc");

                    b.Property<int?>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maNhanVien");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<int?>("NamHoc")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("namHoc");

                    b.Property<string>("NgayBatDau")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayBatDau");

                    b.Property<string>("NgayKetThuc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayKetThuc");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("TenLop")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenLop");

                    b.Property<string>("ThongTin")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("thongTin");

                    b.HasKey("MaLop")
                        .HasName("PK__Lop__261ECAE3BB44420E");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("Lop", (string)null);
                });

            modelBuilder.Entity("Data.Models.MonHoc", b =>
                {
                    b.Property<int?>("MaMonHoc")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maMonHoc");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaMonHoc"));

                    b.Property<string>("Gia")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("gia");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("TenMonHoc")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenMonHoc");

                    b.Property<string>("ThongTin")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("thongTin");

                    b.HasKey("MaMonHoc")
                        .HasName("PK__MonHoc__990DDC6B53DEDC66");

                    b.ToTable("MonHoc", (string)null);
                });

            modelBuilder.Entity("Data.Models.NhaCungCap", b =>
                {
                    b.Property<int?>("MaNhaCungCap")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maNhaCungCap");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaNhaCungCap"));

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("GioiThieu")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("gioiThieu");

                    b.Property<string>("MaSoThue")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("maSoThue");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<string>("NganHang")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nganHang");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("SoTaiKhoan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("soTaiKhoan");

                    b.Property<string>("TenNhaCungCap")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenNhaCungCap");

                    b.HasKey("MaNhaCungCap")
                        .HasName("PK__NhaCungC__D0B4D6DE148B1F68");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("NhaCungCap", (string)null);
                });

            modelBuilder.Entity("Data.Models.NhanVien", b =>
                {
                    b.Property<int?>("MaNhanVien")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maNhanVien");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaNhanVien"));

                    b.Property<string>("Cccd")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("CCCD");

                    b.Property<string>("DanToc")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("danToc");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("diaChi");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("GioiTinh")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("gioiTinh");

                    b.Property<string>("HinhAnh")
                        .HasColumnType("nvarchar(max)")
                        .HasColumnName("hinhAnh");

                    b.Property<string>("LoaiNhanVien")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("loaiNhanVien");

                    b.Property<string>("Luong")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("luong");

                    b.Property<string>("MaTaiKhoan")
                        .HasMaxLength(450)
                        .HasColumnType("nvarchar(450)")
                        .HasColumnName("maTaiKhoan");

                    b.Property<string>("MaTaiKhoanNavigationId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<string>("NganHang")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nganHang");

                    b.Property<string>("NgaySinh")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngaySinh");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("PhongBan")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("phongBan");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("SoTaiKhoan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("soTaiKhoan");

                    b.Property<string>("TenNhanVien")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenNhanVien");

                    b.Property<string>("ThongTin")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("thongTin");

                    b.Property<string>("TonGiao")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("tonGiao");

                    b.HasKey("MaNhanVien")
                        .HasName("PK__NhanVien__BDDEF20D1863E7B9");

                    b.HasIndex("MaTaiKhoanNavigationId");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("Data.Models.PhieuThuChi", b =>
                {
                    b.Property<int?>("MaPhieu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maPhieu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaPhieu"));

                    b.Property<string>("CodeHoaDon")
                        .IsRequired()
                        .HasColumnType("char(23)");

                    b.Property<string>("GhiChu")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("ghiChu");

                    b.Property<string>("HinhThucThanhToan")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("hinhThucThanhToan");

                    b.Property<string>("LoaiPhieu")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("loaiPhieu");

                    b.Property<int?>("MaNhanVien")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maNhanVien");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<string>("NgayTao")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayTao");

                    b.Property<string>("NgayThanhToan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayThanhToan");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("TongTien")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("tongTien");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaPhieu")
                        .HasName("PK__PhieuThu__49A5B11F02F2C7D1");

                    b.HasIndex("MaNhanVien");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("PhieuThuChi", (string)null);
                });

            modelBuilder.Entity("Data.Models.SanPham", b =>
                {
                    b.Property<int?>("MaSanPham")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maSanPham");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaSanPham"));

                    b.Property<string>("Gia")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)")
                        .HasColumnName("gia");

                    b.Property<string>("HanSuDung")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)")
                        .HasColumnName("hanSuDung");

                    b.Property<string>("LoaiSanPham")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("loaiSanPham");

                    b.Property<int?>("MaNhaCungCap")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maNhaCungCap");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("TenSanPham")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenSanPham");

                    b.Property<string>("ThongTin")
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)")
                        .HasColumnName("thongTin");

                    b.HasKey("MaSanPham")
                        .HasName("PK__SanPham__5B439C430F49C885");

                    b.HasIndex("MaNhaCungCap");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("SanPham", (string)null);
                });

            modelBuilder.Entity("Data.Models.SuDungDichVu", b =>
                {
                    b.Property<int?>("MaSuDungDichVu")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maSuDungDichVu");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaSuDungDichVu"));

                    b.Property<int?>("MaDichVu")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maDichVu");

                    b.Property<int?>("MaHocSinh")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maHocSinh");

                    b.Property<int?>("MaTrungTam")
                        .IsRequired()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    b.Property<string>("NgayBatDau")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayBatDau");

                    b.Property<string>("NgayKetThuc")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayKetThuc");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("TenSuDungDichVu")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenSuDungDichVu");

                    b.Property<string>("TrangThai")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("trangThai");

                    b.HasKey("MaSuDungDichVu")
                        .HasName("PK__SuDungDi__0AA1672D8F7D692D");

                    b.HasIndex("MaDichVu");

                    b.HasIndex("MaHocSinh");

                    b.HasIndex("MaTrungTam");

                    b.ToTable("SuDungDichVu", (string)null);
                });

            modelBuilder.Entity("Data.Models.TrungTam", b =>
                {
                    b.Property<int?>("MaTrungTam")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("maTrungTam");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("MaTrungTam"));

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("diaChi");

                    b.Property<string>("DienTich")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("dienTich");

                    b.Property<string>("Email")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("email");

                    b.Property<string>("MaSoThue")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("maSoThue");

                    b.Property<string>("NganHang")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("nganHang");

                    b.Property<string>("NgayXoa")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("ngayXoa");

                    b.Property<string>("NguoiXoa")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)")
                        .HasColumnName("nguoiXoa");

                    b.Property<string>("SoDienThoai")
                        .HasMaxLength(11)
                        .HasColumnType("nvarchar(11)")
                        .HasColumnName("soDienThoai");

                    b.Property<string>("SoTaiKhoan")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)")
                        .HasColumnName("soTaiKhoan");

                    b.Property<string>("TenTrungTam")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)")
                        .HasColumnName("tenTrungTam");

                    b.HasKey("MaTrungTam")
                        .HasName("PK__TrungTam__7F957C446E0AF71B");

                    b.ToTable("TrungTam", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);

                    b.HasData(
                        new
                        {
                            Id = "0c57ab30-5200-4c9e-beee-141218ff445a",
                            ConcurrencyStamp = "1",
                            Name = "Admin",
                            NormalizedName = "Admin"
                        },
                        new
                        {
                            Id = "2bb6f724-1aaf-4ef9-9e2b-92096da52fbf",
                            ConcurrencyStamp = "2",
                            Name = "Quản lý trung tâm",
                            NormalizedName = "Quản lý trung tâm"
                        },
                        new
                        {
                            Id = "a541e4a5-f65c-4774-bdad-b1c273d73499",
                            ConcurrencyStamp = "3",
                            Name = "Giáo viên",
                            NormalizedName = "Giáo viên"
                        },
                        new
                        {
                            Id = "e301c434-2ae0-49ba-9f12-8da68078d1da",
                            ConcurrencyStamp = "4",
                            Name = "Thu ngân",
                            NormalizedName = "Thu ngân"
                        },
                        new
                        {
                            Id = "8437cfac-88fe-4023-be82-4090078e112d",
                            ConcurrencyStamp = "5",
                            Name = "Đầu bếp",
                            NormalizedName = "Đầu bếp"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Data.Models.ChiTietThuChi", b =>
                {
                    b.HasOne("Data.Models.PhieuThuChi", "MaPhieuNavigation")
                        .WithMany("ChiTietThuChis")
                        .HasForeignKey("MaPhieu")
                        .HasConstraintName("FK__chiTietTh__maPhi__6B24EA82");

                    b.Navigation("MaPhieuNavigation");
                });

            modelBuilder.Entity("Data.Models.HocSinh", b =>
                {
                    b.HasOne("Data.Models.Lop", "MaLopNavigation")
                        .WithMany("HocSinhs")
                        .HasForeignKey("MaLop")
                        .HasConstraintName("FK__HocSinh__maLop__6C190EBB");

                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("HocSinhs")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__HocSinh__maTrung__6D0D32F4");

                    b.Navigation("MaLopNavigation");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Data.Models.KetQua", b =>
                {
                    b.HasOne("Data.Models.HocSinh", "MaHocSinhNavigation")
                        .WithMany("KetQuas")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KetQua__maHocSin__6E01572D");

                    b.HasOne("Data.Models.MonHoc", "MaMonHocNavigation")
                        .WithMany("KetQuas")
                        .HasForeignKey("MaMonHoc")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KetQua__maMonHoc__6EF57B66");

                    b.HasOne("Data.Models.NhanVien", "MaNhanVienNavigation")
                        .WithMany("KetQuas")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KetQua__maNhanVi__6FE99F9F");

                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("KetQuas")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__KetQua__maTrungT__70DDC3D8");

                    b.Navigation("MaHocSinhNavigation");

                    b.Navigation("MaMonHocNavigation");

                    b.Navigation("MaNhanVienNavigation");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Data.Models.LoSanPham", b =>
                {
                    b.HasOne("Data.Models.NhanVien", "MaNhanVienNavigation")
                        .WithMany("LoSanPhams")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LoSanPham__maNha__73BA3083");

                    b.HasOne("Data.Models.SanPham", "MaSanPhamNavigation")
                        .WithMany("LoSanPhams")
                        .HasForeignKey("MaSanPham")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LoSanPham__maSan__74AE54BC");

                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("LoSanPhams")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__LoSanPham__maTru__75A278F5");

                    b.Navigation("MaNhanVienNavigation");

                    b.Navigation("MaSanPhamNavigation");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Data.Models.Lop", b =>
                {
                    b.HasOne("Data.Models.NhanVien", "MaNhanVienNavigation")
                        .WithMany("Lops")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Lop__maNhanVien__71D1E811");

                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("Lops")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__Lop__maTrungTam__72C60C4A");

                    b.Navigation("MaNhanVienNavigation");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Data.Models.NhaCungCap", b =>
                {
                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("NhaCungCaps")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__NhaCungCa__maTru__76969D2E");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Data.Models.NhanVien", b =>
                {
                    b.HasOne("Data.Models.ApplicationUser", "MaTaiKhoanNavigation")
                        .WithMany()
                        .HasForeignKey("MaTaiKhoanNavigationId");

                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("NhanViens")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__NhanVien__maTrun__787EE5A0");

                    b.Navigation("MaTaiKhoanNavigation");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Data.Models.PhieuThuChi", b =>
                {
                    b.HasOne("Data.Models.NhanVien", "MaNhanVienNavigation")
                        .WithMany("PhieuThuChis")
                        .HasForeignKey("MaNhanVien")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PhieuThuC__maNha__797309D9");

                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("PhieuThuChis")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__PhieuThuC__maTru__7A672E12");

                    b.Navigation("MaNhanVienNavigation");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Data.Models.SanPham", b =>
                {
                    b.HasOne("Data.Models.NhaCungCap", "MaNhaCungCapNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaNhaCungCap")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SanPham__maNhaCu__7B5B524B");

                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("SanPhams")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SanPham__maTrung__7C4F7684");

                    b.Navigation("MaNhaCungCapNavigation");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Data.Models.SuDungDichVu", b =>
                {
                    b.HasOne("Data.Models.DichVu", "MaDichVuNavigation")
                        .WithMany("SuDungDichVus")
                        .HasForeignKey("MaDichVu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SuDungDic__maDic__7D439ABD");

                    b.HasOne("Data.Models.HocSinh", "MaHocSinhNavigation")
                        .WithMany("SuDungDichVus")
                        .HasForeignKey("MaHocSinh")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SuDungDic__maHoc__7E37BEF6");

                    b.HasOne("Data.Models.TrungTam", "MaTrungTamNavigation")
                        .WithMany("SuDungDichVus")
                        .HasForeignKey("MaTrungTam")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired()
                        .HasConstraintName("FK__SuDungDic__maTru__7F2BE32F");

                    b.Navigation("MaDichVuNavigation");

                    b.Navigation("MaHocSinhNavigation");

                    b.Navigation("MaTrungTamNavigation");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Data.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Data.Models.DichVu", b =>
                {
                    b.Navigation("SuDungDichVus");
                });

            modelBuilder.Entity("Data.Models.HocSinh", b =>
                {
                    b.Navigation("KetQuas");

                    b.Navigation("SuDungDichVus");
                });

            modelBuilder.Entity("Data.Models.Lop", b =>
                {
                    b.Navigation("HocSinhs");
                });

            modelBuilder.Entity("Data.Models.MonHoc", b =>
                {
                    b.Navigation("KetQuas");
                });

            modelBuilder.Entity("Data.Models.NhaCungCap", b =>
                {
                    b.Navigation("SanPhams");
                });

            modelBuilder.Entity("Data.Models.NhanVien", b =>
                {
                    b.Navigation("KetQuas");

                    b.Navigation("LoSanPhams");

                    b.Navigation("Lops");

                    b.Navigation("PhieuThuChis");
                });

            modelBuilder.Entity("Data.Models.PhieuThuChi", b =>
                {
                    b.Navigation("ChiTietThuChis");
                });

            modelBuilder.Entity("Data.Models.SanPham", b =>
                {
                    b.Navigation("LoSanPhams");
                });

            modelBuilder.Entity("Data.Models.TrungTam", b =>
                {
                    b.Navigation("HocSinhs");

                    b.Navigation("KetQuas");

                    b.Navigation("LoSanPhams");

                    b.Navigation("Lops");

                    b.Navigation("NhaCungCaps");

                    b.Navigation("NhanViens");

                    b.Navigation("PhieuThuChis");

                    b.Navigation("SanPhams");

                    b.Navigation("SuDungDichVus");
                });
#pragma warning restore 612, 618
        }
    }
}
